{{#> main}}
{{#*inline "content"}}
<div class="flex justify-center items-start min-h-screen pt-8 sm:pt-12">
    <div class="w-full max-w-lg bg-white p-6 sm:p-8 rounded-xl shadow-2xl">
        <h1 class="text-3xl sm:text-4xl font-bold text-center text-gray-700 mb-6 sm:mb-8">{{message}}</h1>

        <form id="getTicketForm" class="space-y-6">
            <div>
                <label for="name" class="block text-sm font-medium text-gray-600 mb-1">Full Name</label>
                <input type="text" id="name" name="name" required class="mt-1 block w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-md shadow-sm
                        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500
                        placeholder-gray-400 text-gray-700">
            </div>
            <div>
                <label for="email" class="block text-sm font-medium text-gray-600 mb-1">Email Address</label>
                <input type="email" id="email" name="email" required class="mt-1 block w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-md shadow-sm
                        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500
                        placeholder-gray-400 text-gray-700">
            </div>
            <div>
                <label for="mobile" class="block text-sm font-medium text-gray-600 mb-1">Mobile Number</label>
                <input type="tel" id="mobile" name="mobile" placeholder="+905xxxxxxxxx" required class="mt-1 block w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-md shadow-sm
                        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500
                        placeholder-gray-400 text-gray-700">
            </div>
            <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm
                       text-base font-medium text-white bg-blue-600 hover:bg-blue-700
                       focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500
                       transition-colors duration-150">
                Get Ticket
            </button>
        </form>

        <div id="ticketResult"
            class="mt-10 p-6 bg-blue-50 border-2 border-dashed border-blue-400 rounded-lg text-center"
            style="display: none;">
            <h2 class="text-2xl font-semibold text-blue-700 mb-4">Your Ticket Has Been Created Successfully!</h2>
            <p class="text-gray-700 mb-2">
            </p>
            <div class="my-6 flex justify-center">
                <img id="qrCodeImage" src="" alt="Ticket QR Code"
                    class="w-48 h-48 sm:w-56 sm:h-56 border-4 border-blue-500 rounded-md p-1 bg-white shadow-lg" />
            </div>
            <p class="text-sm text-gray-600">You can use this QR code for discounts at partner venues.</p>
        </div>

        <div id="errorMessage" class="mt-6 p-4 bg-red-50 border border-red-300 text-red-700 rounded-md"
            style="display: none;">
        </div>

    </div>
</div>

<script>
    document.getElementById('getTicketForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        const mobile = document.getElementById('mobile').value;
        const ticketResultDiv = document.getElementById('ticketResult');
        const qrCodeImage = document.getElementById('qrCodeImage');
        const ticketCodeResultSpan = document.getElementById('ticketCodeResult');
        const errorMessageDiv = document.getElementById('errorMessage');

        ticketResultDiv.style.display = 'none';
        errorMessageDiv.style.display = 'none';
        errorMessageDiv.textContent = '';

        try {
            const response = await fetch('/buy-ticket', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json', },
                body: JSON.stringify({ name, email, mobile }),
            });

            const data = await response.json();

            if (!response.ok) {
                let errorMsg = 'An error occurred while getting the ticket.';
                if (data && data.message) {
                    if (Array.isArray(data.message)) {
                        errorMsg = data.message.join(', ');
                    } else {
                        errorMsg = data.message;
                    }
                }
                throw new Error(errorMsg);
            }

            if (data.ticket && data.ticket.code) {
                qrCodeImage.src = data.ticket.code;
                ticketResultDiv.style.display = 'block';
                document.getElementById('getTicketForm').reset();
            } else {
                throw new Error('Incomplete ticket information received from server.');
            }

        } catch (error) {
            console.error('Error:', error);
            errorMessageDiv.textContent = error.message || 'There was a problem creating the ticket. Please try again.';
            errorMessageDiv.style.display = 'block';
        }
    });
</script>
{{/inline}}
{{/main}}
